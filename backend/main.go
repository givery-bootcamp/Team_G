package main

import (
	"context"
	"log"
	"net/http"

	"connectrpc.com/connect"
	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"
	"google.golang.org/protobuf/types/known/emptypb"
	"google.golang.org/protobuf/types/known/timestamppb"

	postv1 "backend/gen/post/v1"        // generated by protoc-gen-connect-go
	"backend/gen/post/v1/postv1connect" // generated by protoc-gen-connect-go
)

type PostServer struct{}

// json か バイナリ
func (s *PostServer) Post(
	ctx context.Context,
	req *connect.Request[emptypb.Empty],
) (*connect.Response[postv1.PostResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&postv1.PostResponse{
		Post: &postv1.PostData{
			Id:        1,
			Title:     "Hello, World!",
			Body:      "This is a test post.",
			UserId:    1,
			Comments:  []*postv1.Comment{},
			CreatedAt: &timestamppb.Timestamp{},
			UpdatedAt: &timestamppb.Timestamp{},
		},
	})
	return res, nil
}

func main() {
	poster := &PostServer{}
	mux := http.NewServeMux()
	path, handler := postv1connect.NewPostServiceHandler(poster)
	mux.Handle(path, handler)

	http.ListenAndServe(
		"localhost:8080",
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	)
}
