services:
  backend:
    build:
      context: ../../docker
      dockerfile: backend.Dockerfile
    ports:
      - '8080:8080'
      #- "127.0.0.1:8080:8080"
    volumes:
      - ../:/go/src/myapp
    command: "sleep infinity"
    depends_on:
      - mongoserver
    environment:
      TZ: Asia/Tokyo
    networks:
      - app-net
    links:
      - mongoserver:mongoserver
  # frontend:
  #   build:
  #     context: ../../docker
  #     dockerfile: frontend.Dockerfile
  #   ports:
  #     - '8000:8000'
  #     #- "127.0.0.1:8000:8000"
  #   volumes:
  #     - ../frontend:/home/myapp
  #     - /home/myapp/node_modules
  #   command: "pnpm dev"
  #   environment:
  #     TZ: Asia/Tokyo
  mongoserver:
    container_name: "mongoserver"
    hostname: mongoserver
    image: mongo
    ports:
      - 27017:27017
      #- "127.0.0.1:27017:27017"
    volumes:
      - ./db:/data/db
      - ./configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - app-net
networks:
  app-net:
    driver: bridge
  # db:
  #   build:
  #     context: ../docker
  #     dockerfile: mysql.Dockerfile
  #   volumes:
  #     - ../docker/mysql:/var/lib/mysql
  #     - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
  #     - ./mysql/sql:/sqlscripts
  #   ports:
  #     - '3306:3306'
  #   environment:
  #     - MYSQL_ALLOW_EMPTY_PASSWORD=yes
  #     - MYSQL_DATABASE=training
